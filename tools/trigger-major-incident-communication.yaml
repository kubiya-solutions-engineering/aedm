tools:
  - name: trigger-major-incident-response
    image: python:3.11
    description: |
      This tool creates an incident for "Major Incident via Kubi" service in PagerDuty, generates a Teams bridge link, creates a Fresh Service Ticket, sends a SEV1 message in #incident_response Slack channel, and provides the necessary details.
    alias: trigger-major-incident-response
    content: |
      # Set default values for environment variables
      REPO_URL="${REPO_URL:-https://github.com/kubiya-solutions-engineering/aedm}"
      REPO_NAME="${REPO_NAME:-aedm}"
      SOURCE_CODE_DIR="${SOURCE_CODE_DIR:-/src/pager_duty/trigger_incident}"
      REPO_BRANCH="${REPO_BRANCH:-main}"
      REPO_DIR="${REPO_DIR:-$REPO_NAME}"
      BIN_DIR="${BIN_DIR:-/usr/local/bin}"
      APT_CACHE_DIR="${APT_CACHE_DIR:-/var/cache/apt/archives}"
      PIP_CACHE_DIR="${PIP_CACHE_DIR:-/var/cache/pip}"
      
      # Create cache directories
      mkdir -p "$APT_CACHE_DIR"
      mkdir -p "$BIN_DIR"
      mkdir -p "$PIP_CACHE_DIR"

      install_git() {
        apt-get update -qq > /dev/null && apt-get install -y -qq git > /dev/null
      }

      # Function to install pip dependencies if not cached
      install_pip_dependencies() {
        export PIP_CACHE_DIR="$PIP_CACHE_DIR"
        pip install -r requirements.txt --cache-dir "$PIP_CACHE_DIR" --quiet > /dev/null
      }

      # Install git
      install_git

      # Clone repository if not already cloned
      if [ ! -d "$REPO_DIR" ]; then
        if [ -n "$GH_TOKEN" ]; then
          GIT_ASKPASS_ENV=$(mktemp)
          chmod +x "$GIT_ASKPASS_ENV"
          echo -e "#!/bin/sh\necho \$GH_TOKEN" > "$GIT_ASKPASS_ENV"
          GIT_ASKPASS="$GIT_ASKPASS_ENV" git clone --branch "$REPO_BRANCH" "https://$GH_TOKEN@$(echo $REPO_URL | sed 's|https://||')" "$REPO_DIR" > /dev/null
          rm "$GIT_ASKPASS_ENV"
        else
          git clone --branch "$REPO_BRANCH" "$REPO_URL" "$REPO_DIR" > /dev/null
        fi
      fi
      
      # cd into the cloned repo
      cd "${REPO_DIR}/${SOURCE_CODE_DIR}"

      # Install pip dependencies
      install_pip_dependencies

      # Run the script
      export PYTHONPATH="${PYTHONPATH}:/${REPO_DIR}/${SOURCE_CODE_DIR}"
      exec python trigger-major-incident-communication.py --description "{{ .description }}" --business_impact "{{ .business_impact }}"
    args:
      - name: description
        description: The description of the incident.
        required: true
      - name: business_impact
        description: The business impact of the incident.
        required: true
    env:
      - FSAPI_PROD
      - SLACK_API_TOKEN
      - SLACK_CHANNEL_ID
      - SLACK_THREAD_TS
      - AZURE_TENANT_ID
      - AZURE_CLIENT_ID
      - AZURE_CLIENT_SECRET
      - PD_API_KEY
      - KUBIYA_USER_EMAIL